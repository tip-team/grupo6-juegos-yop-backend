## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# Set to the Postgres user you want to connect to; 'postgres' is the default user.
spring.datasource.username=${JUEGOS_YOP_DATASOURCE_USERNAME}
spring.datasource.password=${JUEGOS_YOP_DATASOURCE_PASSWORD}
spring.cloud.gcp.sql.database-name=${JUEGOS_YOP_DATASOURCE_NAME}
# This value is formatted in the form: [gcp-project-id]:[region]:[instance-name]
spring.cloud.gcp.sql.instance-connection-name=${JUEGOS_YOP_DATASOURCE_URL}
# So app starts despite "table already exists" errors.
spring.datasource.continue-on-error=true

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# MERCADO PAGO
MERCADOPAGO_ACCESS_TOKEN=${JUEGOS_YOP_MERCADOPAGO_ACCESS_TOKEN}

# Enable response compression
server.compression.enabled=true

# The comma-separated list of mime types that should be compressed
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json

# Compress the response only if the response size is at least 1KB
server.compression.min-response-size=1024